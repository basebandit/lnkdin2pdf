name: Bump Version and Generate Changelog

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  bump:
    name: üßæ Bump version, generate changelog, create PR
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: ‚ö° Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: üì¶ Sync all dev dependencies
        run: uv sync --all-groups

      - name: üö´ Skip bump if tag already exists
        id: check_tag
        run: |
          version=$(awk -F'"' '/^\s*version\s*=/ { print $2; exit }' pyproject.toml)
          tag="v$version"
          echo "new_version=$version" >> $GITHUB_OUTPUT
          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "Tag $tag already exists. Skipping bump."
            echo "skip_bump=true" >> $GITHUB_OUTPUT
          else
            echo "skip_bump=false" >> $GITHUB_OUTPUT
          fi

      - name: üè∑Ô∏è Run Commitizen bump with changelog
        if: ${{ steps.check_tag.outputs.skip_bump == 'false' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          uv run cz bump --changelog --yes

      - name: üöÄ Create release PR
        if: steps.check_tag.outputs.skip_bump == 'false'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "bump: release v${{ steps.check_tag.outputs.new_version }}"
          branch: release/v${{ steps.check_tag.outputs.new_version }}
          title: "üîñ Release v${{ steps.check_tag.outputs.new_version }}"
          body: "This PR was auto-generated by GitHub Actions for release v${{ steps.check_tag.outputs.new_version }}."
          base: main
          delete-branch: true
          labels: automerge

      - name: üîÅ Auto-merge PR using rebase
        if: steps.check_tag.outputs.skip_bump == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));

            const prList = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:release/v${{ steps.check_tag.outputs.new_version }}`
            });

            if (prList.data.length === 0) {
              console.log("‚ùå No matching PR found for auto-merge.");
              return;
            }

            const pr = prList.data[0];
            const sha = pr.head.sha;
            const maxAttempts = 10;

            for (let attempt = 1; attempt <= maxAttempts; attempt++) {
              console.log(`üîç Checking status checks for commit ${sha} (attempt ${attempt}/${maxAttempts})`);
              const status = await github.rest.repos.getCombinedStatusForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: sha,
              });

              if (status.data.state === "success") {
                console.log("‚úÖ All required status checks have passed. Merging PR...");
                await github.rest.pulls.merge({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number,
                  merge_method: "rebase",
                });
                console.log(`‚úÖ Rebase-merged PR #${pr.number}`);
                return;
              } else if (status.data.state === "failure") {
                console.log("‚ùå Status checks failed. Aborting merge.");
                return;
              } else {
                console.log(`‚åõ Status checks not ready (state: ${status.data.state}). Retrying...`);
                await sleep(10000); // wait 10 seconds before retrying
              }
            }

            console.log("‚è≥ Timed out waiting for status checks to complete.");
